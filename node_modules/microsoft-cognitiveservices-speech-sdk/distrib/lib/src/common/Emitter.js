"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
var ws_1 = require("ws");
// tslint:disable-next-line:max-classes-per-file
var CustomEmitter = /** @class */ (function () {
    function CustomEmitter() {
        this.target = null;
        try {
            this.target = new EventTarget();
        }
        catch (error) {
            if (typeof window !== "undefined") {
                this.target = window.document.createElement("eventTarget");
            }
            else {
                throw error;
            }
        }
    }
    CustomEmitter.prototype.on = function (eventName, listener) {
        return this.target.addEventListener(eventName, listener);
    };
    CustomEmitter.prototype.off = function (eventName, listener) {
        return this.target.removeEventListener(eventName, listener);
    };
    CustomEmitter.prototype.emit = function (eventName, detail) {
        this.target.dispatchEvent(new CustomEvent(eventName, { detail: detail }));
    };
    return CustomEmitter;
}());
// tslint:disable-next-line:max-classes-per-file
var PlatformEmitter = /** @class */ (function () {
    function PlatformEmitter() {
        if (ws_1.EventEmitter !== undefined) {
            this.privEmitter = new ws_1.EventEmitter();
        }
        else {
            this.privEmitter = new CustomEmitter();
        }
    }
    PlatformEmitter.prototype.on = function (eventName, fn) {
        this.privEmitter.on(eventName, fn);
    };
    PlatformEmitter.prototype.off = function (eventName, fn) {
        this.privEmitter.off(eventName, fn);
    };
    PlatformEmitter.prototype.emit = function (eventName, params) {
        this.privEmitter.emit(eventName, params);
    };
    return PlatformEmitter;
}());
exports.PlatformEmitter = PlatformEmitter;

//# sourceMappingURL=Emitter.js.map
